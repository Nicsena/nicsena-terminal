<!DOCTYPE html>
<html>
<body>
  
  <title>Terminal</title>

  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <link rel="icon" type="image/png" href="/favicon.png"/>
  <script src="https://code.jquery.com/jquery-3.6.1.js"></script>
  
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Inconsolata">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css" integrity="sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N" crossorigin="anonymous">
  
  <script src="/js/websocket.js"></script>
  <link rel="stylesheet" href="/css/style.css">

<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js" integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.min.js" integrity="sha384-+sLIOodYLS7CIrQpBjl+C7nPvqq+FbNUBDunl/OZv93DB7Ln/533i8e/mZXLi/P+" crossorigin="anonymous"></script>
  

  
  
<script>


  $(document).on('submit', '#runform', function(event){
  
    event.preventDefault();
    
    run();
    
});
  
  let websocket = new FriendlyWebSocket();
  let program;
  let programpid;
  
websocket.on("open", () => {
document.getElementById("status-websocket").innerHTML = `<b>Websocket Connection Status: <a style="color: #009622;">Connected!<a> </b>`
document.getElementById("killbutton").style.display = "none";
document.getElementById("execbutton").disabled = false
document.getElementById("command").disabled = false
websocket.send( JSON.stringify( [ {"event": "connected"} ] ) )
setInterval(pingWs, 5000); // Start pinging every 5 seconds.
});
  
websocket.on("close", () => {
clearInterval(pingWs) // Stop pinging.
document.getElementById("killbutton").style.display = "none";
document.getElementById("execbutton").disabled = true
document.getElementById("command").disabled = true
document.getElementById("status-websocket").innerHTML = `<b>Websocket Connection Status: <a style="color: #960000;">Disconnected!<a> </b>`
});
  
websocket.on("message", message => {

    try {

    data = JSON.parse(message);

   //console.log(data)
      
   if(data[0]["event"] === "consoleoutput") {
   //document.getElementById("output").innerText += `\nWebsocket Response: ${JSON.stringify(data)} \n\nEvent: ${data[0]["event"]} \nProgram: ${data[0]["program"]} \nProgram PID: ${data[0]["pid"]} \nArgs: ${data[0]["args"]}\n` 
   document.getElementById("output").innerText +=`${data[0]["args"]}`
   }

   if(data[0]["event"] === "programstart") {
    programpid = data[0]["args"]
    document.getElementById("killbutton").disabled = false
    document.getElementById("killbutton").innerText = `Kill running process - Command: ${program} - PID: ${data[0]["args"]}`
    document.getElementById("killbutton").style.display = "block";
    document.getElementById("execbutton").style.display = "none";
    document.getElementById("command").disabled = true
   }

   if(data[0]["event"] === "programstop") {
    document.getElementById("killbutton").disabled = true
    document.getElementById("killbutton").style.display = "none";
    document.getElementById("execbutton").style.display = "block";
    document.getElementById("command").disabled = false
    document.getElementById("killbutton").innerText = "";
    programpid = "";
   }
    
  } catch (e) {
    console.warn("invalid message from server", data);
  }
  
});

function pingWs() {
  websocket.send( JSON.stringify ( { "event": "ping" }))
}  

function run() {
    var command = document.runform.command.value;

    if(command === null || (!command.length)) return;
  
    program = command;
    document.getElementById("output").innerText += `\n<%= user%>@<%=term_name %>:~$ ${command}\n` 
    websocket.send( JSON.stringify ( { "event": "command", "args": command } ) );
    document.runform.command.value = "";
    addcommandtoHistory(command)

};

function killProcess() {
  document.getElementById("killbutton").disabled = true
  websocket.send( JSON.stringify ( { "event": "stopcommand", "args": programpid } ) );
}
  
function clearConsole() {
  document.getElementById("output").innerText = ""
}
  
function toggleCommandHistory () {
  const element = document.getElementById("command-history-container")
  
  if(element.style.display === "none") {
    element.style.display = "block";
  } else {
    element.style.display = "none";
  }
  
}
  
  
let item = "0"
  
function addcommandtoHistory(cmd) {
  const element = document.getElementById("command-history")
  
  item++
  element.innerHTML += `<li class="list-group-item bg-dark">${item}: <code>${cmd}</code></li><br>`
  
}
  
</script>

  
<div id="page" name="page" class="container p-3 my-3 no-border rounded">
  
  
<%- include('header'); -%>
  
  
   <p id="status-websocket" name="status-websocket"><b> Websocket Connection Status: </b></p>
  
  
  
  
  <!--   BUTTONS -->
  
  <p id="buttons" name="buttons">
    <button id="clearconsolebutton" name="clearconsolebutton" type="button" onclick="clearConsole()" class="btn btn-danger">Clear Console</button>
    <button id="commandhistorybutton" name="commandhistorybutton" type="button" onclick="toggleCommandHistory()" class="btn btn-info">Command History</button>
  </p>
  

  <!--  CONSOLE -->
  
  <div id="console" name="console" class="container-fluid p-3 no-border rounded-top">
  
    
    <code>
    <div id="output" name="output">
    </div>
    </code>
    
  </div>

  
  <!--   COMMAND FORM -->

    <form id="runform" name="runform">
      
        <div class="input-group">
          
            <div class="input-group-prepend">
            <span class="input-group-text text-light bg-dark border border-dark rounded-0">></span>
            </div>
          
       <input type="text" placeholder="Type a command" name="command" id="command" class="form-control" aria-label="Small" aria-describedby="inputGroup-sizing-sm" required autocorrect="off" autocapitalize="none">
       <button id="killbutton" style="display:none;" name="killbutton" class="btn btn-danger rounded-0" onclick="killProcess()" type="button"></button>   

            <div class="input-group-append">
            <button id="execbutton" name="execbutton" class="btn btn-dark rounded-0" onclick="run()" type="button">Run</button>
            </div>
          
    </div>
      
  </form>
  
  
  
  
<!--   COMMAND HISTORY -->
  
   <div id="command-history-container" name="command-history-container" class="cardcontainer-fluid p-3 no-border rounded-top">
     
     <div id="command-history-header" name="command-history-header"> <h5>Command History</h5> </div>
  
       <ul class="list-group list-group-flush">

  <div id="command-history" name="command-history">
    
   

  </div>

    </ul>


</div>
  
  
<br>

<%- include('footer'); -%>

<br>
  
</body>
</html>
